swagger: "2.0"
info:
  version: 1.0.0
  title: DriverApp
  description: A sample API that uses companies as an example to demonstrate features in the swagger-2.0 specification
  termsOfService: http://swagger.io/terms/
  contact:
    name: iCabbi API Team
    email: romina.liuzzi@icabbi.com
    url: http://madskristensen.net
  license:
    name: MIT
    url: http://github.com/gruntjs/grunt/blob/master/LICENSE-MIT
host: private-47daa-driverapp4.apiary-mock.com
basePath: /icabbi
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /company:
    get:
      description: |
        Returns all companies from the system that the user has access to.
      operationId: findCompanies
      parameters:
        - name: tags
          in: query
          description: tags to filter by
          required: false
          type: array
          collectionFormat: csv
          items:
            type: string
        - name: limit
          in: query
          description: maximum number of results to return
          required: false
          type: integer
          format: int32
      responses:
        200:
          description: company response
          schema:
            type: array
            items:
              $ref: '#/definitions/Company'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      description: Creates a new company in the store.  Duplicates are allowed
      operationId: addCompany
      parameters:
        - name: pet
          in: body
          description: company to add to the store
          required: true
          schema:
            $ref: '#/definitions/NewCompany'
      responses:
        200:
          description: company response
          schema:
            $ref: '#/definitions/Company'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /company/{id}:
    get:
      description: Returns a company based on a single ID, if the user does not have access to the company
      operationId: findCompanyById
      parameters:
        - name: id
          in: path
          description: ID of company to fetch
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: company response
          schema:
            $ref: '#/definitions/Company'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      description: deletes a single company based on the ID supplied
      operationId: deleteCompany
      parameters:
        - name: id
          in: path
          description: ID of company to delete
          required: true
          type: integer
          format: int64
      responses:
        204:
          description: company deleted
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
definitions:
  Company:
    allOf:
      - $ref: '#/definitions/NewCompany'
      - required:
        - id
        properties:
          id:
            type: integer
            format: int64
  NewCompany:
    required:
      - name
    properties:
      name:
        type: string
      tag:
        type: string
  Driver:
    required:
      - id
    properties:
        id:
          type: integer
          format: int64
  Vehicle:
    required:
      - id
    properties:
        id:
          type: integer
          format: int64
  Error:
    required:
      - code
      - message
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string